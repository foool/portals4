<?xml version="1.0"?>
<test>
  
  <subtest>
    <desc>Test put overflow with ME</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me me_opt="OP_PUT EVENT_LINK_DISABLE" me_match="0x5555" me_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_me me_opt="OP_PUT" me_match="0x5555" me_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                    </ptl_me>
                  </ptl_me>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with USE_ONCE ME</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me me_opt="OP_PUT" me_match="0x5555" me_data="0x77" list="OVERFLOW">
                    <ptl_eq_wait>
                      <check event_type="LINK"/>
                    </ptl_eq_wait>
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_me_append me_opt="OP_PUT USE_ONCE" me_match="0x5555" me_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                      <ptl_eq_wait>
                        <check event_type="AUTO_UNLINK"/>
                      </ptl_eq_wait>
                      
                      <ptl_me_unlink ret="ARG_INVALID"/>
                      
                    </ptl_me_append>
                  </ptl_me>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with USE_ONCE overflow ME</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me_append me_opt="OP_PUT USE_ONCE EVENT_LINK_DISABLE" me_match="0x5555" me_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="AUTO_UNLINK"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_me me_opt="OP_PUT" me_match="0x5555" me_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                      
                    </ptl_me>
                    
                    <ptl_me_unlink ret="ARG_INVALID"/>
                    
                  </ptl_me_append>
                  
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with USE_ONCE for ME and overflow ME</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me_append me_opt="OP_PUT USE_ONCE EVENT_LINK_DISABLE" me_match="0x5555" me_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="AUTO_UNLINK"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_me_append me_opt="OP_PUT USE_ONCE EVENT_LINK_DISABLE" me_match="0x5555" me_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                      <ptl_eq_wait>
                        <check event_type="AUTO_UNLINK"/>
                      </ptl_eq_wait>
                      
                      
                      <ptl_me_unlink ret="ARG_INVALID"/>
                    </ptl_me_append>
                    
                    <ptl_me_unlink ret="ARG_INVALID"/>
                    
                  </ptl_me_append>
                  
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with LE</desc>
    <ptl>
      <ptl_ni ni_opt="NO_MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="NO_MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_le le_opt="OP_PUT EVENT_LINK_DISABLE" le_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_le le_opt="OP_PUT" le_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                    </ptl_le>
                  </ptl_le>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with USE_ONCE LE</desc>
    <ptl>
      <ptl_ni ni_opt="NO_MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="NO_MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_le le_opt="OP_PUT EVENT_LINK_DISABLE" le_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_le_append le_opt="OP_PUT USE_ONCE" le_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                      <ptl_eq_wait>
                        <check event_type="AUTO_UNLINK"/>
                      </ptl_eq_wait>
                      
                      <ptl_le_unlink ret="ARG_INVALID"/>
                      
                    </ptl_le_append>
                  </ptl_le>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with USE_ONCE overflow LE</desc>
    <ptl>
      <ptl_ni ni_opt="NO_MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="NO_MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_le_append le_opt="OP_PUT USE_ONCE EVENT_LINK_DISABLE" le_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="AUTO_UNLINK"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_le le_opt="OP_PUT" le_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                      
                    </ptl_le>
                    
                    <ptl_le_unlink ret="ARG_INVALID"/>
                    
                  </ptl_le_append>
                  
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with USE_ONCE for LE and overflow LE</desc>
    <ptl>
      <ptl_ni ni_opt="NO_MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="NO_MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_le_append le_opt="OP_PUT USE_ONCE EVENT_LINK_DISABLE" le_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="AUTO_UNLINK"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_le_append le_opt="OP_PUT USE_ONCE" le_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW"/>
                      </ptl_eq_wait>
                      
                      <ptl_eq_wait>
                        <check event_type="AUTO_UNLINK"/>
                      </ptl_eq_wait>
                      
                      
                      <ptl_le_unlink ret="ARG_INVALID"/>
                    </ptl_le_append>
                    
                    <ptl_le_unlink ret="ARG_INVALID"/>
                    
                  </ptl_le_append>
                  
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with ME with unused CT</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me me_opt="OP_PUT EVENT_LINK_DISABLE" me_match="0x5555" me_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_ct>
                      
                      <ptl_me me_opt="OP_PUT" me_match="0x5555" me_data="0x77" list="PRIORITY">
                        
                        <!-- Wait for overflow event -->
                        <ptl_eq_wait>
                          <check event_type="PUT_OVERFLOW"/>
                        </ptl_eq_wait>
                        
                      </ptl_me>
                      
                      <ptl_ct_get ct_handle="ct[0]">
                        <check ct_event_success="0" ct_event_failure="0"/>
                      </ptl_ct_get>
                      
                    </ptl_ct>
                    
                  </ptl_me>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with ME with used CT</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0x5555" target_id="1"/>
                    
                    <!-- Wait for the packet containing the ack -->
                    <ptl_eq_wait>
                      <check event_type="SEND"/>
                    </ptl_eq_wait>
                    
                    <!-- Wait for the ack -->
                    <ptl_eq_wait>
                      <check event_type="ACK"/>
                    </ptl_eq_wait>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me me_opt="OP_PUT EVENT_LINK_DISABLE" me_match="0x5555" me_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_ct>
                      
                      <ptl_me me_opt="OP_PUT CT_OVERFLOW" me_match="0x5555" me_data="0x77" list="PRIORITY">
                        
                        <!-- Wait for overflow event -->
                        <ptl_eq_wait>
                          <check event_type="PUT_OVERFLOW"/>
                        </ptl_eq_wait>
                        
                      </ptl_me>
                      
                      <ptl_ct_get ct_handle="ct[0]">
                        <check ct_event_success="4" ct_event_failure="0"/>
                      </ptl_ct_get>
                      
                    </ptl_ct>
                    
                  </ptl_me>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
  <subtest>
    <desc>Test put overflow with ME with 2 unexpected PUTs</desc>
    <ptl>
      <ptl_ni ni_opt="MATCH PHYSICAL">
        <ompi_rt>
          <ptl_ni ni_opt="MATCH LOGICAL">
            <ptl_eq>
              <ptl_pt>
                <ptl_get_id>
                
                <if rank="0">
                  <ptl_md md_data="0xaa" md_opt="SUCCESS_DISABLE">
                    
                    <!-- Wait for rank 1 to set up the receiving buffer -->
                    <barrier/>
                    
                    <ptl_put ack_req="ACK" length="4" match="0" target_id="1"/>
                    <ptl_put ack_req="ACK" length="40" match="0" target_id="1"/>
                    
                    <barrier/>
                    
                  </ptl_md>
                </if>
                
                <if rank="1">
                  <ptl_me me_opt="OP_PUT EVENT_LINK_DISABLE" me_match="0" me_data="0x77" list="OVERFLOW">
                    
                    <!-- Force rank 0 to wait for the buffer to be ready -->
                    <barrier/>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    <ptl_eq_wait>
                      <check event_type="PUT"/>
                    </ptl_eq_wait>
                    
                    
                    <ptl_me me_opt="OP_PUT" me_match="0" me_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW" event_mlength="4"/>
                      </ptl_eq_wait>
                      
                    </ptl_me>
                    
                    
                    <ptl_me me_opt="OP_PUT" me_match="0" me_data="0x77" list="PRIORITY">
                      
                      <!-- Wait for overflow event -->
                      <ptl_eq_wait>
                        <check event_type="PUT_OVERFLOW" event_mlength="40"/>
                      </ptl_eq_wait>
                      
                    </ptl_me>
                    
                    <barrier/>
                    
                  </ptl_me>
                </if>
                
                </ptl_get_id>
              </ptl_pt>
            </ptl_eq>
          </ptl_ni>
        </ompi_rt>
      </ptl_ni>
    </ptl>
  </subtest>
  
</test>
